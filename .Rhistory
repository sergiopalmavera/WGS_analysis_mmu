rownames(ma) <- pops
colnames(ma) <- pops
ma
for(i in 1:nrow(contrast_data)){
col_i <- contrast_data$pop1[i]
row_i <- contrast_data$pop2[i]
ma[row_i,col_i] <- contrast_data[i,3] # 3rd col should contain values
ma[col_i,row_i] <- contrast_data[i,3]
}
min_fst <- min(ma)
max_fst <- max(ma)
mid_fst <- min_fst + (max_fst - min_fst)/2
p <- ggcorrplot(ma, lab=T, type = "lower") +
scale_fill_gradient2(
limit = c(min_fst,max_fst), low = "blue", high = "red", mid = "white", midpoint = mid_fst
)
return()
}
vis_pairwise_fst(global_fst)
vis_pairwise_fst <- function(contrast_data){
pops <- contrast_data$pop1 %>% as.character() %>% c(contrast_data$pop2) %>% unique()
ma <- matrix(rep(NA, length(pops)*length(pops)), nrow = 6, ncol = 6)
rownames(ma) <- pops
colnames(ma) <- pops
ma
for(i in 1:nrow(contrast_data)){
col_i <- contrast_data$pop1[i]
row_i <- contrast_data$pop2[i]
ma[row_i,col_i] <- contrast_data[i,3] # 3rd col should contain values
ma[col_i,row_i] <- contrast_data[i,3]
}
min_fst <- min(ma)
max_fst <- max(ma)
mid_fst <- min_fst + (max_fst - min_fst)/2
p <- ggcorrplot(ma, lab=T, type = "lower") +
scale_fill_gradient2(
limit = c(min_fst,max_fst), low = "blue", high = "red", mid = "white", midpoint = mid_fst
)
return(p)
}
vis_pairwise_fst(global_fst)
contrast_data = global_fst
pops <- contrast_data$pop1 %>% as.character() %>% c(contrast_data$pop2) %>% unique()
ma <- matrix(rep(NA, length(pops)*length(pops)), nrow = 6, ncol = 6)
rownames(ma) <- pops
colnames(ma) <- pops
ma
for(i in 1:nrow(contrast_data)){
col_i <- contrast_data$pop1[i]
row_i <- contrast_data$pop2[i]
ma[row_i,col_i] <- contrast_data[i,3] # 3rd col should contain values
ma[col_i,row_i] <- contrast_data[i,3]
}
ma
min_fst <- min(ma)
max_fst <- max(ma)
mid_fst <- min_fst + (max_fst - min_fst)/2
min_fst
min_fst <- min(ma, na.rm = T)
max_fst <- max(ma, na.rm = T)
min_fst
max_fst
mid_fst <- min_fst + (max_fst - min_fst)/2
mid_fst
vis_pairwise_fst <- function(contrast_data){
contrast_data = global_fst
pops <- contrast_data$pop1 %>% as.character() %>% c(contrast_data$pop2) %>% unique()
ma <- matrix(rep(NA, length(pops)*length(pops)), nrow = 6, ncol = 6)
rownames(ma) <- pops
colnames(ma) <- pops
for(i in 1:nrow(contrast_data)){
col_i <- contrast_data$pop1[i]
row_i <- contrast_data$pop2[i]
ma[row_i,col_i] <- contrast_data[i,3] # 3rd col should contain values
ma[col_i,row_i] <- contrast_data[i,3]
}
min_fst <- min(ma, na.rm = T)
max_fst <- max(ma, na.rm = T)
mid_fst <- min_fst + (max_fst - min_fst)/2
p <- ggcorrplot(ma, lab=T, type = "lower") +
scale_fill_gradient2(
limit = c(min_fst,max_fst), low = "blue", high = "red", mid = "white", midpoint = mid_fst
)
return(p)
}
vis_pairwise_fst(global_fst)
contrast_data = global_fst
pops <- contrast_data$pop1 %>% as.character() %>% c(contrast_data$pop2) %>% unique()
ma <- matrix(rep(NA, length(pops)*length(pops)), nrow = 6, ncol = 6)
rownames(ma) <- pops
colnames(ma) <- pops
for(i in 1:nrow(contrast_data)){
col_i <- contrast_data$pop1[i]
row_i <- contrast_data$pop2[i]
ma[row_i,col_i] <- contrast_data[i,3] # 3rd col should contain values
ma[col_i,row_i] <- contrast_data[i,3]
}
min_fst <- min(ma, na.rm = T)
max_fst <- max(ma, na.rm = T)
mid_fst <- min_fst + (max_fst - min_fst)/2
p <- ggcorrplot(ma, lab=T, type = "lower") +
scale_fill_gradient2(
limit = c(min_fst,max_fst), low = "blue", high = "red", mid = "white", midpoint = mid_fst
)
mid_fst
min_fst
max_fst
ggcorrplot(ma, lab=T, type = "lower") +
scale_fill_gradient2(
limit = c(min_fst,max_fst), low = "blue", high = "red", mid = "white", midpoint = mid_fst
)
min_fst
max_fst
ggcorrplot(ma, lab=T, type = "lower") +
scale_fill_gradient2(
limit = c(min_fst,max_fst), low = "blue", high = "red", mid = "white", midpoint = mid_fst
)
ggcorrplot(ma, lab=T, type = "lower") +
scale_fill_gradient2(
limit = c(0.25,max_fst), low = "blue", high = "red", mid = "white", midpoint = mid_fst
)
min_fst <- min(ma, na.rm = T)-0.1
max_fst <- max(ma, na.rm = T)+0.1
mid_fst <- min_fst + (max_fst - min_fst)/2
p <- ggcorrplot(ma, lab=T, type = "lower") +
scale_fill_gradient2(
limit = c(min_fst,max_fst), low = "blue", high = "red", mid = "white", midpoint = mid_fst
)
p
min_fst <- min(ma, na.rm = T)-0.01
max_fst <- max(ma, na.rm = T)+0.01
mid_fst <- min_fst + (max_fst - min_fst)/2
p <- ggcorrplot(ma, lab=T, type = "lower") +
scale_fill_gradient2(
limit = c(min_fst,max_fst), low = "blue", high = "red", mid = "white", midpoint = mid_fst
)
#  return(p)
p
vis_pairwise_fst <- function(contrast_data){
contrast_data = global_fst
pops <- contrast_data$pop1 %>% as.character() %>% c(contrast_data$pop2) %>% unique()
ma <- matrix(rep(NA, length(pops)*length(pops)), nrow = 6, ncol = 6)
rownames(ma) <- pops
colnames(ma) <- pops
for(i in 1:nrow(contrast_data)){
col_i <- contrast_data$pop1[i]
row_i <- contrast_data$pop2[i]
ma[row_i,col_i] <- contrast_data[i,3] # 3rd col should contain values
ma[col_i,row_i] <- contrast_data[i,3]
}
min_fst <- min(ma, na.rm = T)-0.01
max_fst <- max(ma, na.rm = T)+0.01
mid_fst <- min_fst + (max_fst - min_fst)/2
p <- ggcorrplot(ma, lab=T, type = "lower") +
scale_fill_gradient2(
limit = c(min_fst,max_fst), low = "blue", high = "red", mid = "white", midpoint = mid_fst
)
return(p)
}
vis_pairwise_fst(global_fst)
win_fst_sel_vs_ctrl_prep <- lapply(win_fst_sel_vs_ctrl, function(d){
d %>%
# filter by min number of SNPs in window (min 10 SNPs)
filter(N_VARIANTS >= 10) %>%
# separate x chromosome
mutate(is_x = CHROM == "X") %>%
# group by autosomes/chrX
group_by(is_x) %>%
# compute zscores
mutate(z_win_fst_score = scale(MEAN_FST))
}) %>%
bind_rows(.id = "contrast") %>%
mutate(contrast = factor(
contrast, levels = c("DUK_vs_FZTDU","DUC_vs_FZTDU","DU6_vs_FZTDU","DU6P_vs_FZTDU","DUhLB_vs_FZTDU"))
)
win_fst_sel_vs_ctrl <- lapply(
list.files(here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),pattern = "*.fst"),
function(fl){
read.table(
here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output",fl),
header = T,
stringsAsFactors = F
)
}
)
names(win_fst_sel_vs_ctrl) <- list.files(
here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),pattern = "*.fst"
) %>% str_remove(".windowed.weir.fst")
win_fst_sel_vs_ctrl_prep <- lapply(win_fst_sel_vs_ctrl, function(d){
d %>%
# filter by min number of SNPs in window (min 10 SNPs)
filter(N_VARIANTS >= 10) %>%
# separate x chromosome
mutate(is_x = CHROM == "X") %>%
# group by autosomes/chrX
group_by(is_x) %>%
# compute zscores
mutate(z_win_fst_score = scale(MEAN_FST))
}) %>%
bind_rows(.id = "contrast") %>%
mutate(contrast = factor(
contrast, levels = c("DUK_vs_FZTDU","DUC_vs_FZTDU","DU6_vs_FZTDU","DU6P_vs_FZTDU","DUhLB_vs_FZTDU"))
)
win_fst_sel_vs_ctrl_prep <- lapply(win_fst_sel_vs_ctrl, function(d){
d %>%
# filter by min number of SNPs in window (min 10 SNPs)
dplyr::filter(N_VARIANTS >= 10) %>%
# separate x chromosome
mutate(is_x = CHROM == "X") %>%
# group by autosomes/chrX
group_by(is_x) %>%
# compute zscores
mutate(z_win_fst_score = scale(MEAN_FST))
}) %>%
bind_rows(.id = "contrast") %>%
mutate(contrast = factor(
contrast, levels = c("DUK_vs_FZTDU","DUC_vs_FZTDU","DU6_vs_FZTDU","DU6P_vs_FZTDU","DUhLB_vs_FZTDU"))
)
win_fst_sel_vs_ctrl %>% lapply(head)
list.files(here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),pattern = "*.fst")
win_fst_sel_vs_ctrl <- lapply(
list.files(here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),pattern = "*.fst$"),
function(fl){
read.table(
here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output",fl),
header = T,
stringsAsFactors = F
)
}
)
names(win_fst_sel_vs_ctrl) <- list.files(
here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),pattern = "*.fst"
) %>% str_remove(".windowed.weir.fst")
list.files(here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),pattern = "*.fst$")
win_fst_sel_vs_ctrl <- lapply(
list.files(here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),pattern = "*.fst$"),
function(fl){
read.table(
here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output",fl),
header = T,
stringsAsFactors = F
)
}
)
win_fst_sel_vs_ctrl <- lapply(
list.files(here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),pattern = "*.fst$"),
function(fl){
read.table(
here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output",fl),
header = T,
stringsAsFactors = F
)
}
)
names(win_fst_sel_vs_ctrl) <- list.files(
here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),pattern = "*.fst$"
) %>% str_remove(".windowed.weir.fst")
# import genomewide manhattan created above
include_graphics(here("00_dashboard/figures","manhattan_genomewide_fst.png"))
include_graphics(here("00_dashboard/figures","manhattan_genomewide_z_fst.png"))
win_fst_sel_vs_ctrl <- lapply(
list.files(here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),pattern = "*.fst$"),
function(fl){
read.table(
here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output",fl),
header = T,
stringsAsFactors = F
)
}
)
names(win_fst_sel_vs_ctrl) <- list.files(
here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),pattern = "*.fst$"
) %>% str_remove(".windowed.weir.fst")
win_fst_sel_vs_ctrl_prep <- lapply(win_fst_sel_vs_ctrl, function(d){
d %>%
# filter by min number of SNPs in window (min 10 SNPs)
dplyr::filter(N_VARIANTS >= 10) %>%
# separate x chromosome
mutate(is_x = CHROM == "X") %>%
# group by autosomes/chrX
group_by(is_x) %>%
# compute zscores
mutate(z_win_fst_score = scale(MEAN_FST))
}) %>%
bind_rows(.id = "contrast") %>%
mutate(contrast = factor(
contrast, levels = c("DUK_vs_FZTDU","DUC_vs_FZTDU","DU6_vs_FZTDU","DU6P_vs_FZTDU","DUhLB_vs_FZTDU"))
)
manhattan_dat <- win_fst_sel_vs_ctrl_prep %>%
mutate(CHROM = factor(CHROM, levels = c(1:19,"X"))) %>%
group_by(contrast, CHROM) %>%
arrange(contrast, CHROM, BIN_START) %>%
mutate(
genomic_index = NA,
chr_index = 1:n(),
center = BIN_START + (BIN_END - BIN_START)/2,
center_mb = center/1e6,
chr_color = ifelse(CHROM %in% seq(1,19,2), "black", "grey")
)
manhattan_dat$genomic_index <- 1:nrow(manhattan_dat)
ticks <- manhattan_dat %>%
group_by(contrast, CHROM) %>%
summarise(chr_median = median(genomic_index))
# run this once to create genomewide manhattan and export
# Manhattan of win-fst scores
manhattan_dat %>%
ggplot(data = ., mapping = aes(x = genomic_index, y = MEAN_FST, color = chr_color)) +
geom_point(alpha = 0.5) +
theme_bw() +
theme(
legend.position = "none",
axis.ticks.x = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
scale_color_manual(values = c("black","grey")) +
scale_x_continuous(breaks = ticks$chr_median, labels = ticks$CHROM, expand = c(0,0)) +
facet_wrap(~contrast, ncol = 1, strip.position = "right", scales = "free_x") +
xlab(NULL) +
ylab("Mean Window Fst") +
ggtitle("Windowed Fst - Selected vs Control") +
ggsave(
filename = "manhattan_genomewide_fst.png",
device = "png",
path = here("00_dashboard/figures"),
width = 15,
height = 10,
units = "in",
dpi = 300
)
# Manhattan of z-win-fst scores
manhattan_dat %>%
ggplot(data = ., mapping = aes(x = genomic_index, y = z_win_fst_score, color = chr_color)) +
geom_point(alpha = 0.5) +
theme_bw() +
theme(
legend.position = "none",
axis.ticks.x = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
scale_color_manual(values = c("black","grey")) +
scale_x_continuous(breaks = ticks$chr_median, labels = ticks$CHROM, expand = c(0,0)) +
facet_wrap(~contrast, ncol = 1, strip.position = "right", scales = "free_x") +
xlab(NULL) +
ylab("z(Mean Window Fst)") +
geom_hline(filter(q, quantile == "q95"), mapping = aes(yintercept = zFst), linetype = "dashed", color = "blue") +
geom_hline(filter(q, quantile == "q99"), mapping = aes(yintercept = zFst), linetype = "dashed", color = "red") +
ggtitle("z(Windowed Fst) - Selected vs Control") +
ggsave(
filename = "manhattan_genomewide_z_fst.png",
device = "png",
path = here("00_dashboard/figures"),
width = 15,
height = 10,
units = "in",
dpi = 300
)
q <- summary_z_win_fst %>%
reshape2::melt(id.vars = c("contrast"), measure.vars = c("q95","q99"), variable.name = "quantile", value.name = "zFst")
summary_z_win_fst <- win_fst_sel_vs_ctrl_prep %>%
ungroup() %>%
group_by(contrast) %>%
summarise(
n_win = n(),
min = min(z_win_fst_score),
median = median(z_win_fst_score),
mean = mean(z_win_fst_score),
q95 = quantile(z_win_fst_score, 0.95),
q99 = quantile(z_win_fst_score, 0.99),
max = max(z_win_fst_score)
)
summary_z_win_fst %>% kable(digits = 2, caption = "z(Mean Window Fst)")
q <- summary_z_win_fst %>%
reshape2::melt(id.vars = c("contrast"), measure.vars = c("q95","q99"), variable.name = "quantile", value.name = "zFst")
q
manhattan_dat %>%
ggplot(data = ., mapping = aes(x = genomic_index, y = z_win_fst_score, color = chr_color)) +
geom_point(alpha = 0.5) +
theme_bw() +
theme(
legend.position = "none",
axis.ticks.x = element_blank(),
plot.title = element_text(hjust = 0.5)
) +
scale_color_manual(values = c("black","grey")) +
scale_x_continuous(breaks = ticks$chr_median, labels = ticks$CHROM, expand = c(0,0)) +
facet_wrap(~contrast, ncol = 1, strip.position = "right", scales = "free_x") +
xlab(NULL) +
ylab("z(Mean Window Fst)") +
geom_hline(filter(q, quantile == "q95"), mapping = aes(yintercept = zFst), linetype = "dashed", color = "blue") +
geom_hline(filter(q, quantile == "q99"), mapping = aes(yintercept = zFst), linetype = "dashed", color = "red") +
ggtitle("z(Windowed Fst) - Selected vs Control") +
ggsave(
filename = "manhattan_genomewide_z_fst.png",
device = "png",
path = here("00_dashboard/figures"),
width = 15,
height = 10,
units = "in",
dpi = 300
)
/batches123_08_LDD_SFS/scripts
sample(10,1:10)
sample(10,1,10)
here("batches123_04_FinalVCF/batches123_08_LDD_SFS/figures","miss_cts.png")
setwd("D:/BackUpWork/03_SAW/LinuX/projekte_I2-SOS-FERT/GitHub/WGS_analysis_mmu/batches123_08_LDD_SFS/figures")
include_graphics(here("batches123_04_FinalVCF/batches123_08_LDD_SFS/figures","miss_cts.png"))
include_graphics(here("batches123_04_FinalVCF/batches123_08_LDD_SFS/figures","miss_cts_facet.png"))
sample_info <- read.csv(here("sample_info/sample_info_batch1_batch2.csv")) %>%
dplyr::select(Linie, sample_id) %>%
mutate(target_cvg = "30x") %>%
bind_rows(
read.csv(here("sample_info/sample_info_batch3/sample_info.csv")) %>%
dplyr::select(Linie,name) %>%
dplyr::rename(sample_id = name) %>%
mutate(sample_id = str_remove(sample_id, "-S1"), target_cvg = "5x")
) %>%
mutate(Linie = ifelse(Linie == "HLB", "DUhLB",Linie))
options(scipen = 999)
library(flexdashboard)
library(dplyr)
library(stringr)
library(ggplot2)
library(reshape2)
library(tidyr)
library(here)
library(plotly)
library(DT)
library(UpSetR)
library(data.table)
library(vroom)
library(RColorBrewer)
library(knitr)
library(ggcorrplot)
library(tibble)
sample_info <- read.csv(here("sample_info/sample_info_batch1_batch2.csv")) %>%
dplyr::select(Linie, sample_id) %>%
mutate(target_cvg = "30x") %>%
bind_rows(
read.csv(here("sample_info/sample_info_batch3/sample_info.csv")) %>%
dplyr::select(Linie,name) %>%
dplyr::rename(sample_id = name) %>%
mutate(sample_id = str_remove(sample_id, "-S1"), target_cvg = "5x")
) %>%
mutate(Linie = ifelse(Linie == "HLB", "DUhLB",Linie))
win_fst_sel_vs_ctrl <- lapply(
list.files(here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),pattern = "*.fst$"),
function(fl){
read.table(
here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output",fl),
header = T,
stringsAsFactors = F
)
}
)
names(win_fst_sel_vs_ctrl) <- list.files(
here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),pattern = "*.fst$"
) %>% str_remove(".windowed.weir.fst")
global_fst <- read.table(
here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output/global_fst.tab")
) %>%
dplyr::rename(global_fst = V2) %>%
separate(col = V1, sep = "_vs_", into = c("pop1","pop2")) %>%
mutate(pop1 = factor(pop1, levels = c("DUK","DUC","DU6","DU6P","DUhLB"))) %>%
arrange(pop1)
win_fst_sel_vs_ctrl_prep <- lapply(win_fst_sel_vs_ctrl, function(d){
d %>%
# filter by min number of SNPs in window (min 10 SNPs)
dplyr::filter(N_VARIANTS >= 10) %>%
# separate x chromosome
mutate(is_x = CHROM == "X") %>%
# group by autosomes/chrX
group_by(is_x) %>%
# compute zscores
mutate(z_win_fst_score = scale(MEAN_FST))
}) %>%
bind_rows(.id = "contrast") %>%
mutate(contrast = factor(
contrast, levels = c("DUK_vs_FZTDU","DUC_vs_FZTDU","DU6_vs_FZTDU","DU6P_vs_FZTDU","DUhLB_vs_FZTDU"))
)
win_fst_sel_vs_ctrl
win_fst_sel_vs_ctrl %>% lapply(head)
d=win_fst_sel_vs_ctrl[[1]]
head(d)
names(win_fst_sel_vs_ctrl)
list.files(here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),pattern = "*.fst$")
list.files(here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),
pattern = "*windowed.weir.fst.fst$")
list.files(here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),
pattern = "windowed.weir.fst.fst$")
list.files(here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),
pattern = "windowed.weir.fst$")
win_fst_sel_vs_ctrl <- lapply(
list.files(here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),
pattern = "windowed.weir.fst$"),
function(fl){
read.table(
here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output",fl),
header = T,
stringsAsFactors = F
)
}
)
names(win_fst_sel_vs_ctrl) <- list.files(
here("batches123_07_selection_analysis/01_win_fst_sel_vs_ctrl/output"),pattern = "*.fst$"
) %>% str_remove(".windowed.weir.fst")
?rasterGrob
install.packages("png")
library(png)
?rasterGrob
library(grid)
library(gridExtra)
?readPNG
